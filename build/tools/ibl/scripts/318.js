"use strict";(self.webpackChunk_babylonjs_texture_tools=self.webpackChunk_babylonjs_texture_tools||[]).push([[318],{1318:(t,e,r)=>{r.r(e),r.d(e,{_TGATextureLoader:()=>s});var a=r(1137);function n(t){let e=0;return{id_length:t[e++],colormap_type:t[e++],image_type:t[e++],colormap_index:t[e++]|t[e++]<<8,colormap_length:t[e++]|t[e++]<<8,colormap_size:t[e++],origin:[t[e++]|t[e++]<<8,t[e++]|t[e++]<<8],width:t[e++]|t[e++]<<8,height:t[e++]|t[e++]<<8,pixel_size:t[e++],flags:t[e++]}}function o(t,e){if(e.length<19)return void a.V.Error("Unable to load TGA file - Not enough data to contain header");let r=18;const o=n(e);if(o.id_length+r>e.length)return void a.V.Error("Unable to load TGA file - Not enough data");r+=o.id_length;let s,h=!1,c=!1,l=!1;switch(o.image_type){case 9:h=!0;case 1:c=!0;break;case 10:h=!0;case 2:break;case 11:h=!0;case 3:l=!0}const g=o.pixel_size>>3,f=o.width*o.height*g;let u,d,_,w,b,p,y;if(c&&(u=e.subarray(r,r+=o.colormap_length*(o.colormap_size>>3))),h){let t,a,n;s=new Uint8Array(f);let o=0;const i=new Uint8Array(g);for(;r<f&&o<f;)if(t=e[r++],a=1+(127&t),128&t){for(n=0;n<g;++n)i[n]=e[r++];for(n=0;n<a;++n)s.set(i,o+n*g);o+=g*a}else{for(a*=g,n=0;n<a;++n)s[o+n]=e[r++];o+=a}}else s=e.subarray(r,r+=c?o.width*o.height:f);switch((48&o.flags)>>4){default:case 2:d=0,w=1,y=o.width,_=0,b=1,p=o.height;break;case 0:d=0,w=1,y=o.width,_=o.height-1,b=-1,p=-1;break;case 3:d=o.width-1,w=-1,y=-1,_=0,b=1,p=o.height;break;case 1:d=o.width-1,w=-1,y=-1,_=o.height-1,b=-1,p=-1}const m="_getImageData"+(l?"Grey":"")+o.pixel_size+"bits",A=i[m](o,u,s,_,b,p,d,w,y);t.getEngine()._uploadDataToTextureDirectly(t,A)}const i={GetTGAHeader:n,UploadContent:o,_getImageData8bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=e,g=t.width,f=t.height;let u,d,_,w=0;const b=new Uint8Array(g*f*4);for(_=a;_!==o;_+=n)for(d=i;d!==h;d+=s,w++)u=c[w],b[4*(d+g*_)+3]=255,b[4*(d+g*_)+2]=l[3*u+0],b[4*(d+g*_)+1]=l[3*u+1],b[4*(d+g*_)+0]=l[3*u+2];return b},_getImageData16bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=t.width,g=t.height;let f,u,d,_=0;const w=new Uint8Array(l*g*4);for(d=a;d!==o;d+=n)for(u=i;u!==h;u+=s,_+=2){f=c[_+0]+(c[_+1]<<8);const t=255*((31744&f)>>10)/31|0,e=255*((992&f)>>5)/31|0,r=255*(31&f)/31|0;w[4*(u+l*d)+0]=t,w[4*(u+l*d)+1]=e,w[4*(u+l*d)+2]=r,w[4*(u+l*d)+3]=32768&f?0:255}return w},_getImageData24bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=t.width,g=t.height;let f,u,d=0;const _=new Uint8Array(l*g*4);for(u=a;u!==o;u+=n)for(f=i;f!==h;f+=s,d+=3)_[4*(f+l*u)+3]=255,_[4*(f+l*u)+2]=c[d+0],_[4*(f+l*u)+1]=c[d+1],_[4*(f+l*u)+0]=c[d+2];return _},_getImageData32bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=t.width,g=t.height;let f,u,d=0;const _=new Uint8Array(l*g*4);for(u=a;u!==o;u+=n)for(f=i;f!==h;f+=s,d+=4)_[4*(f+l*u)+2]=c[d+0],_[4*(f+l*u)+1]=c[d+1],_[4*(f+l*u)+0]=c[d+2],_[4*(f+l*u)+3]=c[d+3];return _},_getImageDataGrey8bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=t.width,g=t.height;let f,u,d,_=0;const w=new Uint8Array(l*g*4);for(d=a;d!==o;d+=n)for(u=i;u!==h;u+=s,_++)f=c[_],w[4*(u+l*d)+0]=f,w[4*(u+l*d)+1]=f,w[4*(u+l*d)+2]=f,w[4*(u+l*d)+3]=255;return w},_getImageDataGrey16bits:function(t,e,r,a,n,o,i,s,h){const c=r,l=t.width,g=t.height;let f,u,d=0;const _=new Uint8Array(l*g*4);for(u=a;u!==o;u+=n)for(f=i;f!==h;f+=s,d+=2)_[4*(f+l*u)+0]=c[d+0],_[4*(f+l*u)+1]=c[d+0],_[4*(f+l*u)+2]=c[d+0],_[4*(f+l*u)+3]=c[d+1];return _}};class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,e,r){const a=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),i=n(a);r(i.width,i.height,e.generateMipMaps,!1,(()=>{o(e,a)}))}}}}]);